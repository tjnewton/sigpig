
# =============================================================================
#  Sample NonLinLoc programs control file
#
#  2018.12.17
#
#  Anthony Lomax <anthony@alomax.net>
#
#  See "Control File" and "Running the Sample Location" pages
#     in the NonLicLoc on-line documentation:
#     http://www.alomax.net/nlloc
# =============================================================================




# = comment

# non-nested include files allowed, use:
# INCLUDE - Include
# optional, repeatable
# Syntax 1: INCLUDE includeFile
# Inserts text from another file at current positon in control file.
#
#    includeFile (string) path and name of file to include




# =============================================================================
# =============================================================================
# Generic control file statements
# =============================================================================
#
#

# CONTROL - Control
# required, non-repeatable
# Syntax 1: CONTROL messageFlag randomNumberSeed
# Sets various general program control parameters.
#
#    messageFlag (integer, min:-1, default:1) sets the verbosity level for messages printed to the terminal ( -1 = completely silent, 0 = error messages only, 1 = 0 + higher-level warning and progress messages, 2 and higher = 1 + lower-level warning and progress messages + information messages, ...)
#    randomNumberSeed (integer) integer seed value for generating random number sequences (used by program NLLoc to generate Metropolis samples and by program Time2EQ to generate noisy time picks)
#
CONTROL 1 54321


# TRANS - Geographic Transformation
# required, non-repeatable
# Syntax 1: TRANS GLOBAL
# Syntax 2: TRANS SIMPLE latOrig longOrig rotAngle
# Syntax 3: TRANS NONE
# Syntax 4: TRANS SDC latOrig longOrig rotAngle
# Syntax 5: TRANS LAMBERT refEllipsoid latOrig longOrig firstStdParal secondStdParal rotAngle
# Syntax 6: TRANS TRANS_MERC refEllipsoid latOrig longOrig rotAngle
# Sets geographic to working coordinates transformation parameters. The GLOBAL option sets spherical regional/teleseismic mode, with no geographic transformation - most position values are input and used directly as latitude and longitude in degrees. The SIMPLE, SDC, LAMBERT and TRANS_MERC options make transformations of geographic coordinates into a Cartesian/rectangular system. The NONE transformation performs no geographic conversion.
#
#    latOrig (float, min:-90.0, max:90.0) latitude in decimal degrees of the rectangular coordinates origin
#    longOrig (float, min:-180.0, max:180.0) longitude in decimal degrees of the rectangular coordinates origin
#    rotAngle (float, min:-360.0, max:360.0) rotation angle of geographic north in degrees clockwise relative to the rectangular coordinates system Y-axis
#    refEllipsoid (choice: WGS-84 GRS-80 WGS-72 Australian Krasovsky International Hayford-1909 Clarke-1880 Clarke-1866 Airy Bessel Hayford-1830 Sphere) reference ellipsoid name
#    latOrig (float, min:-90.0, max:90.0) latitude in decimal degrees of the rectangular coordinates origin
#    longOrig (float, min:-180.0, max:180.0) longitude in decimal degrees of the rectangular coordinates origin
#    firstStdParal secondStdParal (float, min:-90.0, max:90.0) first and second standard parallels (meridians) in decimal degrees
#    rotAngle (float, min:-360.0, max:360.0) rotation angle of geographic north in degrees clockwise relative to the rectangular coordinates system Y-axis
#
TRANS  LAMBERT  Clarke-1880  61.0 -150.0  60.0 62.0  0.0

# MAPLINE - Geographic Maplines
# optional, repeatable
# Syntax 1: MAPLINE formatType name red green blue lineStyle
# Specifies a file and drawing parameters for geographic line data.
#
#    formatType (choice: GMT_LATLON GMT_LONLAT XY_LONLAT GMT_LONLATDEPTH GMT_LONLATELEV_M GMT_GRD) line file format or GMT grd file format
#    name (string) full path and file name
#    red green blue (float, min:0.0, max:1.0) red, green and blue intensities (0.0-1.0) (not implemented)
#    lineStyle (choice: SOLID DASHED DOTTED DASHDOT) line style (not implemented)
#
MAPLINE  GMT_LONLAT ./data_geog/alaska_coasts.xy  0.0 0.0 0.0  SOLID
MAPLINE  GMT_LONLAT ./data_geog/alaska_rivers.xy  0.0 0.0 1.0  SOLID
MAPLINE  GMT_LONLAT ./data_geog/alaska.xy  0.0 0.0 0.0  SOLID

#
#
# =============================================================================
# END of Generic control file statements
# =============================================================================
# =============================================================================




# =============================================================================
# =============================================================================
# Vel2Grid control file statements
# =============================================================================
#
#

# VGOUT - Output File Root Name
# required, non-repeatable
# Syntax 1: VGOUT fileRoot
# Specifies the directory path and file root name (no extension) for the output velocity grid.
#
#    fileRoot (string) full or relative path and file root name (no extension) for output
#
VGOUT  ./model/layer

#  VGTYPE - Wave Type
# required, repeatable
# Syntax 1: VGTYPE waveType
# Specifies the physical wave type for a velocity grid.
#
#    waveType (choice: P S) wave type
#
VGTYPE P
VGTYPE S

# VGGRID - Grid Description
# required, non-repeatable
# Syntax 1: VGGRID xNum yNum zNum xOrig yOrig zOrig dx dy dz gridType
# Specifies the size and type of the 3D velocity grid.
#
#    xNum yNum zNum (integer, min:2) number of grid nodes in the x, y and z directions
#    xOrig yOrig zOrig (float) x, y and z location of the grid origin in km relative to the geographic origin.
#    dx dy dz (float) grid node spacing in kilometers along the x, y and z axes
#    gridType (choice: VELOCITY VELOCITY_METERS SLOWNESS VEL2 SLOW2 SLOW_2_METERS SLOW_LEN) physical quantity to store on grid ( VELOCITY = km/s, VELOCITY_METERS = m/s, SLOWNESS = s/km, VEL2 = vel**2, SLOW2 = (s/km)**2, SLOW_2_METERS = slow**2 ((s/m)**2), SLOW_LEN = slow*dx (sec)).
#
# Layer 2DGrid (NOTE: num_grid_x must be = 2 for 2D grids)
VGGRID  2 401 106  0.0 0.0 -5.0  1.0 1.0 1.0  SLOW_LEN # this grid is 400km in distance and from -5km to 100km in depth

# -----------------------------------------------------------------------------
# velocity model description
# -----------------------------------------------------------------------------
#
#LAYER - Velocity Model - Layer
# optional, repeatable
# Syntax 1: LAYER depth VpTop VpGrad VsTop VsGrad rhoTop rhoGrad
# Specifies a constant or gradient velocity layer.
#
#    depth (float) depth to top of layer (use negative values for layers above z=0)
#    VpTop VsTop rhoTop (float) P velocity, and S velocity in km/s and density in kg/m**3 at the top of the layer.
#    VpGrad VsGrad rhoGrad (float) Linear P velocity and S velocity gradients in km/s/km and density gradient in kg/m**3/km increasing directly downwards from the top of the layer.
#
# scak model used by the Alaska Earthquake Center (Silwal and Tape, 2016)                            
# https://agupubs.onlinelibrary.wiley.com/action/downloadSupplement?doi=10.1002%2F2015JB012588&file=jgrb51546-sup-0001-supplementary.pdf                            
#LAYER depth Vp_top Vp_grad Vs_top Vs_grad p_top p_grad
LAYER    0.0     5.30    0    3.01    0    2.52    0
LAYER    4.0     5.60    0    3.18    0    2.61    0
LAYER    9.0     6.20    0    3.52    0    2.78    0
LAYER    14.0    6.90    0    3.92    0    2.97    0
LAYER    19.0    7.40    0    4.20    0    3.12    0
LAYER    24.0    7.70    0    4.37    0    3.20    0
LAYER    33.0    7.90    0    4.49    0    3.26    0
LAYER    49.0    8.10    0    4.60    0    3.32    0
LAYER    66.0    8.30    0    4.72    0    3.37    0

#
#
# =============================================================================
# END of Vel2Grid control file statements
# =============================================================================
# =============================================================================




# =============================================================================
# =============================================================================
# Grid2Time control file statements
# =============================================================================
#
#

# GTFILES - Input and Output File Root Name
# required, non-repeatable
# Syntax 1: GTFILES ttimeFileRoot outputFileRoot waveType iSwapBytesOnInput
# Specifies the directory path and file root name (no extension), and the wave type identifier for the input velocity grid and output time grids.
#
#    ttimeFileRoot (string) full or relative path and file root name (no extension) for input velocity grid (generated by program Vel2Grid)
#    outputFileRoot (string) full or relative path and file root name (no extension) for output travel-time and take-off angle grids
#    waveType (choice: P S) wave type
#    iSwapBytesOnInput (integer, min:0, max:1, default:0) flag to indicate if hi and low bytes of input velocity grid file should be swapped
#
GTFILES  ./model/layer  ./time/layer P	  # uncomment to generate P travel times
#GTFILES  ./model/layer  ./time/layer S	 # uncomment to generate S travel times

# GTMODE - Program Modes
# required, non-repeatable
# Syntax 1: GTMODE gridMode angleMode
# Specifies several program run modes.
#
#    gridMode (choice: GRID3D GRID2D) grid type ( GRID3D for a 3D, Nx*Ny*Nz grid or GRID2D for a 2D, 2*Ny*Nz grid)
#    angleMode (choice: ANGLES_YES ANGLES_NO) sets if take-off angles are calculated and an angles grid is output ( ANGLES_YES for angles calulcation or ANGLES_NO for no angles calculation)
#
GTMODE GRID2D ANGLES_YES

# -----------------------------------------------------------------------------
# description of source (e.g. seismic station) for calculating travel-time field
# -----------------------------------------------------------------------------
#
# GTSRCE - Source Description
# required, repeatable
# Syntax 1: GTSRCE label XYZ xSrce ySrce zSrce elev
# Syntax 2: GTSRCE label LATLON latSrce longSrce zSrce elev
# Syntax 3: GTSRCE label LATLONDM latDegSrce latMinSrce latDir longDegSrce longMinSrce longDir zSrce elev
# Syntax 4: GTSRCE label LATLONDS latDegSrce latMinSrce latSecSrce latDir longDegSrce longMinSrce longSecSrce longDir zSrce elev
# Specifies a source location. One time grid and one angles grid (if requested) will be generated for each source. Four formats are supported: XYZ (rectangular grid coordinates), LATLON (decimal degrees for latitude/longitude), LATLONDM (degrees + decimal minutes for latitude/longitude) and LATLONDS (degrees + minutes + decimal seconds for latitude/longitude).
#
#    label (string) source label ( i.e. a station code: ABC )
#    xSrce ySrce (float) x and y grid positions relative to geographic origin in kilometers for source
#    zSrce (float) z grid position (depth, positive DOWN) in kilometers for source
#    elev (float) elevation above z grid position (positive UP) in kilometers for source
#    latSrce (float, min:-90.0, max:90.0) latitude in decimal degrees for source (pos = North)
#    longSrce (float, min:-180.0, max:180.0) longitude in decimal degrees for source (pos = East)
#    latDegSrce latMinSrce latSecSrce (float) latitude degrees, minutes and seconds for source
#    longDegSrce longMinSrce longSecSrce (float) longitude degrees, minutes and seconds for source
#    latDir (choice: N S) geographic direction
#    longDir (choice: W E) geographic direction
#
# Examples:
#
#GTSRCE  STA   XYZ   27.25  -67.78  0.0  1.242
#GTSRCE  CALF  LATLON   43.753  6.922  0.0  1.242
#GTSRCE  JOU  LATLONDM  43 38.00 N  05 39.52 E   0.0   0.300
#
INCLUDE obs/station_coordinates.txt		# include file with STSRCE statements, this line can be placed anywhere in control file

# GT_PLFD - Podvin and Lecomte Finite Difference
# required, non-repeatable, for Podvin and Lecomte finite difference, must not be present otherwise
# Syntax 1: GT_PLFD hs_eps_init message_flag
# Selects Podvin and Lecomte finite difference method and specifies method parameters.
#
#    hs_eps_init (float, min:0.0) fraction (typically 1.0E-3) defining the tolerated model inhomogeneity for exact initialization. A tolerance larger than 0.01 will potentially create errors larger than those involved by the F.D. scheme without any exact initialization.
#    message_flag (integer, min:0, max:2) Message flag (0:silent, 1:few messages, 2:verbose) A negative value inhibits "clever" initialization.
#
GT_PLFD  1.0e-3  0

#
#
# =============================================================================
# END of Grid2Time control file statements
# =============================================================================
# =============================================================================




# =============================================================================
# =============================================================================
# Time2EQ control file statements
# =============================================================================
#
#

# EQFILES - Input and Output File Root Name
# required, non-repeatable
# Syntax 1: EQFILES ttimeFileRoot outputFileName
# Specifies the directory path and file root name (no extension) for the input time grids, and the path and filename for the output phase/observation file.
#
#    ttimeFileRoot (string) full or relative path and file root name (no extension) for input time grids (generated by program Grid2Time)
#    outputFileName (string) full or relative path and name for output phase/observation file
#
EQFILES ./time/layer ./obs_synth/synth.obs

# EQMECH - Event mechanism description
# optional, non-repeatable
# Syntax 1: EQMECH mechType strike dip rake
# Specifies the mechanism parameters for synthetic first motion calculations.
#
#    mechType (choice: DOUBLE ISO NONE, default:NONE) source mechanism type ( DOUBLE for double couple, or ISO for isotropic/explosion, or NONE for no first motion calculation)
#    strike (float, min:0.0, max:360.0) strike of fault plane in degrees (0,360) clockwise from North in the Geographic reference frame (any rotAngle specified in the generic control statement GTSRCE will be added to strike ).
#    dip (float, min:0.0, max:90.0) dip of the fault plane in degrees (0,90) down from the horizontal.
#    rake (float, min:-180.0, max:180.0) angle in degrees (-180,180) on the fault plane between the strike direction and the slip direction.
#
EQMECH  DOUBLE 0.0 90.0 0.0

# EQMODE - Select Mode: sta->source or source->station
# optional, non-repeatable
# Syntax 1: EQMODE mode
# Selects calculation of times from single source to multiple stations, or from multiple sources to single station. The phase labels in the output phase/observation file are set to the station labels or to the source labels, depending on the mode.
#
#    mode (choice: SRCE_TO_STA STA_TO_SRCE, default:SRCE_TO_STA) SRCE_TO_STA for single sources to multiple stations or STA_TO_SRCE for single station to multiple sources.
#
EQMODE SRCE_TO_STA

# EQEVENT - Hypocenter parameters
# optional, repeatable
# Syntax 1: EQEVENT label xEvent yEvent zEvent originSeconds
#
#    label (string) event identification label
#    xEvent yEvent zEvent (float) x, y and z grid coordinates of hypocenter
#    originSeconds (float) origin time in seconds
#
#EQEVENT  EQ001   0.0 0.0 10.0  0.0

#  EQSRCE - Source Description
# optional, repeatable
# Syntax 1: EQSRCE label XYZ xSrce ySrce zSrce elev
# Syntax 2: EQSRCE label LATLON latSrce longSrce zSrce elev
# Syntax 3: EQSRCE label LATLONDM latDegSrce latMinSrce latDir longDegSrce longMinSrce longDir zSrce elev
# Syntax 4: EQSRCE label LATLONDS latDegSrce latMinSrce latSecSrce latDir longDegSrce longMinSrce longSecSrce longDir zSrce elev
# Specifies a source location. Four formats are supported: XYZ (rectangular grid coordinates), LATLON (decimal degrees for latitude/longitude), LATLONDM (degrees + decimal minutes for latitude/longitude) and LATLONDS (degrees + minutes + decimal seconds for latitude/longitude).
#    label (string) source label ( i.e. a station code: ABC )
#    xSrce ySrce (float) x and y grid positions relative to geographic origin in kilometers for source
#    zSrce (float) z grid position (depth, positive DOWN) in kilometers for source
#    elev (float) elevation above z grid position (positive UP) in kilometers for source
#    latSrce (float) latitude in decimal degrees for source (pos = North)
#    longSrce (float) longitude in decimal degrees for source (pos = East)
#    latDegSrce latMinSrce latSecSrce (float) latitude degrees, minutes and seconds for source
#    longDegSrce longMinSrce longSecSrce (float) longitude degrees, minutes and seconds for source
#    latDir (choice: N S) geographic direction
#    longDir (choice: W E) geographic direction
#
EQSRCE  AlaskaSynth  LATLON  61.335856 -149.948920 44.998047 0.0

# EQSTA - Station List
# required, repeatable
# Syntax 1: EQSTA label phase errorType error errorReportType errorReport probActive
# Specifies a station, phase and timing error to use to generate a synthetic phase reading.
#    label (string) station label ( i.e. a station code: ABC )
#    phase (string) phase type ( i.e. P or S )
#    errorType (choice: GAU BOX FIX NONE) calculated random timing error type ( GAU for normal deviate with zero mean and variance = error , or BOX for boxcar deviate with zero mean and width = 2 * error , or FIX for time error/static = error , or NONE for time error/static = 0.0 )
#    error (float) error magnitude in seconds
#    errorReportType (choice: GAU) timing error type to write to output phase/observation file Err field (The current version of NLLoc recognizes only GAU )
#    errorReport (float) error magnitude in seconds to write to output phase/observation file ErrMag field.
#    probActive (float, default:1.0) Probability (0-1) that a time for this station/phase should be created.

# following generats error-free arrival times since first GAU argument is 0.00
EQSTA  AK_RC01_--  P  GAU 0.00   GAU 0.05
EQSTA  AK_SSN_--   P  GAU 0.00   GAU 0.05
EQSTA  AT_PMR_--   P  GAU 0.00   GAU 0.05
EQSTA  AK_GHO_--   P  GAU 0.00   GAU 0.05
EQSTA  AK_KNK_--   P  GAU 0.00   GAU 0.05
EQSTA  AK_CAPN_--  P  GAU 0.00   GAU 0.05
EQSTA  AK_SLK_--   P  GAU 0.00   GAU 0.05

# EQVPVS - P Velocity to S Velocity Ratio
# optional, non-repeatable (ver 2.0)
# Syntax 1: EQVPVS VpVsRatio
# Specifies the P velocity to S velocity ratio to calculate S phase travel-times.
#
EQVPVS  1.68

# EQQUAL2ERR - Quality to Error Mapping
# required, non-repeatable
# Syntax 1: EQQUAL2ERR Err0 ... ... ... ...
# Specifies the mapping of error to phase pick quality for output of phase/observations in HYPO71 file format (which does not include time uncertainties) ( i.e. time uncertainties in seconds ( i.e. 0.01 or 0.5 ) to quality 0,1,2,3 or 4 ).
#
#    Err0 ... ErrN (float, min:0.0) one time uncertainty value for each quality level that may be output to the phase/observation file. Synthetic errors less than or equal to the first value Err0 are output with quality 0 , less than or equal to the second are output with 1 , etc.
#
EQQUAL2ERR 0.05 0.1 0.5 1.0 99999.9

#
#
# =============================================================================
# END of Time2EQ control file statements
# =============================================================================
# =============================================================================




# =============================================================================
# =============================================================================
# NLLoc control file statements
# =============================================================================
#
#

# LOCSIG - Signature text
# optional, non-repeatable
# Syntax 1: LOCSIG signature
# Identification of an individual, institiution or other entity - written in some output files.
#
#    signature (line) signature text
#
LOCSIG NonLinLoc - ALomax Scientific

# LOCCOM - Comment text
# optional, non-repeatable
# Syntax 1: LOCCOM comment
# Comment about location run - written in some output files.
#
#    comment (line) comment text
#
LOCCOM 2018-11-30 Mww7.0 Southern Alaska (NonLinLoc Sample Location)

# LOCFILES - Input and Output File Root Name
# required, non-repeatable
# Syntax 1: LOCFILES obsFiles obsFileType ttimeFileRoot outputFileRoot iSwapBytes
# Specifies the directory path and filename for the phase/observation files, and the file root names (no extension) for the input time grids and the output files.
#
#    obsFiles (string) full or relative path and name for phase/observations files, mulitple files may be specified with standard UNIX "wild-card" characters ( * and ? )
#    obsFileType (choice: NLLOC_OBS HYPO71 HYPOELLIPSE NEIC CSEM_ALERT SIMULPS HYPOCENTER HYPODD SEISAN NORDIC NCSN_Y2K_5 NCEDC_UCB ETH_LOC RENASS_WWW RENASS_DEP INGV_BOLL INGV_BOLL_LOCAL INGV_ARCH) format type for phase/observations files (see Phase File Formats)
#    ttimeFileRoot (string) full or relative path and file root name (no extension) for input time grids (generated by program Grid2Time, edu.sc.seis.TauP.TauP_Table_NLL, or other software.
#    outputFileRoot (string) full or relative path and file root name (no extension) for output files
#    iSwapBytes (integer, min:0, max:1, default:0) flag to indicate if hi and low bytes of input time grid files should be swapped. Allows reading of travel-time grids from different computer architecture platforms during TRANS GLOBAL mode location.
#
LOCFILES ./obs/2018-11-30-mww70-southern-alaska.obs NLLOC_OBS  ./time/layer  ./loc/alaska

# LOCHYPOUT - Output File Types
# optional, non-repeatable
# Syntax 1: LOCHYPOUT fileType1 ... ... ... ... ...
# Specifies the filetypes to be used for output.
#
#    fileType1 ... fileTypeN (choice: SAVE_NLLOC_ALL SAVE_NLLOC_SUM NLL_FORMAT_VER_2 FILENAME_DEC_SEC SAVE_NLLOC_EXPECTATION SAVE_NLLOC_OCTREE SAVE_FMAMP SAVE_HYPOELL_ALL SAVE_HYPOELL_SUM SAVE_HYPO71_ALL SAVE_HYPO71_SUM SAVE_HYPOINV_SUM SAVE_HYPOINVERSE_Y2000_ARC SAVE_NLLOC_OCTREE, default:SAVE_NLLOC_ALL SAVE_HYPOINVERSE_Y2000_ARC) File format types to be output: SAVE_NLLOC_ALL = save summary and event files of type NLLoc Hypocenter-Phase file , Phase Statistics file , Scatter file and Confidence Level file ; SAVE_NLLOC_SUM = save summary file only of type NLLoc Hypocenter-Phase file ; NLL_FORMAT_VER_2 = save NLLoc Hypocenter-Phase files in new format (WARNING: this new output format is currently under development and subject to modification.) NLLoc Hypocenter-Phase file , Phase Statistics file , Scatter file and Confidence Level file ; FILENAME_DEC_SEC = output file named with 2 decimal second precision instead of default integer second precision - avoids overwriting of output files for multiple events or multiple locations with earliest observation time in same second ; SAVE_NLLOC_EXPECTATION = hypocenter, location statistics and phase statistics results are based on expectation hypocenter instead of maximum likelihood hypocenter (default) NLLoc Hypocenter-Phase file ; SAVE_NLLOC_OCTREE = saving of oct-tree structure to disk file when LOCSEARCH OCT used ); SAVE_FMAMP = saving of fmamp hypocenter-phase file for input to fmamp, probabilistic first-motion mechanism program ); SAVE_HYPOELL_ALL = save summary and event files of type Quasi-HYPOELLIPSE file ; SAVE_HYPOELL_SUM = save summary file only of type Quasi-HYPOELLIPSE file ; SAVE_HYPO71_ALL = save summary and event files of type HYPO71 Hypocenter/Station file ; SAVE_HYPO71_SUM = save summary file only of type HYPO71 Hypocenter/Station file ; SAVE_HYPOINV_SUM = save summary file only of type HypoInverse Archive file ; SAVE_HYPOINVERSE_Y2000_ARC = save summary file only of type HypoInverse Y2000 Archive file ;
#
LOCHYPOUT SAVE_NLLOC_ALL NLL_FORMAT_VER_2 SAVE_HYPOINV_SUM

# LOCSEARCH - Search Type
# required, non-repeatable
# Syntax 1: LOCSEARCH GRID numSamplesDraw
# Syntax 2: LOCSEARCH MET numSamples numLearn numEquil numBeginSave numSkip stepInit stepMin stepFact probMin
# Syntax 3: LOCSEARCH OCT initNumCells_x initNumCells_y initNumCells_z minNodeSize maxNumNodes numScatter useStationsDensity stopOnMinNodeSize
# Specifies the search type and search parameters. The possible search types are GRID (grid search), MET (Metropolis), and OCT (Octtree).
#    numSamplesDraw (integer) specifies the number of scatter samples to draw from each saved PDF grid ( i.e. grid with gridType = PROB_DENSITY and saveFlag = SAVE ) No samples are drawn if saveFlag < 0.
#    numSamples (integer, min:0) total number of accepted samples to obtain
#    numLearn (integer, min:0) number of accepted samples for learning stage of search
#    numEquil (integer, min:0) number of accepted samples for equilibration stage of search
#    numBeginSave (integer, min:0) number of accepted samples after which to begin saving stage of search, denotes end of equilibration stage
#    numSkip (integer, min:1) number of accepted samples to skip between saves ( numSkip = 1 saves every accepted sample)
#    stepInit (float) initial step size in km for the learning stage ( stepInit < 0.0 gives automatic step size selection. If the search takes too long, the initial step size may be too large; this may be the case if the search region is very large relative to the volume of the high confidence region for the locations.)
#    stepMin (float, min:0.0) minimum step size allowed during any search stage (This parameter should not be critical, set it to a low value.)
#    stepFact (float, min:0.0) step factor for scaling step size during equilibration stage (Try a value of 8.0 to start.)
#    probMin (float) minimum value of the maximum probability (likelihood) that must be found by the end of learning stage, if this value is not reached the search is aborted (This parameters allows the filtering of locations outside of the search grid and locations with large residuals.)
#    initNumCells_x initNumCells_y initNumCells_z (integer) initial number of octtree cells in the x, y, and z directions
#    minNodeSize (float) smallest octtree node side length to process, the octree search is terminated after a node with a side smaller than this length is generated
#    maxNumNodes (integer) total number of nodes to process
#    numScatter (integer) the number of scatter samples to draw from the octtree results
#    useStationsDensity (integer, min:0, max:1, default:0) flag, if 1 weights oct-tree cell probability values used for subdivide decision in proportion to number of stations in oct-tree cell; gives higher search priority to cells containing stations, stablises convergence to local events when global search used with dense cluster of local stations
#    stopOnMinNodeSize (integer, min:0, max:1, default:1) flag, if 1, stop search when first min_node_size reached, if 0 stop subdividing a given cell when min_node_size reached
#
LOCSEARCH  OCT 10 10 4 0.01 20000 5000 0 1
#GridSearch#LOCSEARCH GRID 5000
#LOCSEARCH MET 10000 1000 4000 5000 5 -1 0.01 8.0 1.0e-10


# LOCGRID - Search Grid Description
# required, repeatable
# Syntax 1: LOCGRID xNum yNum zNum xOrig yOrig zOrig dx dy dz gridType saveFlag
# Specifies the size and other parameters of an initial or nested 3D search grid. The order of LOCGRID statements is critical (see Notes).
#    xNum yNum zNum (integer, min:2) number of grid nodes in the x, y and z directions
#    xOrig yOrig zOrig (float) x, y and z location of the grid origin in km relative to the geographic origin. Use a large, negative value ( i.e. -1.0e30 ) to indicate automatic positioning of grid along corressponding direction (valid for nested grids only, may not be used for initial grid).
#    dx dy dz (float) grid node spacing in kilometers along the x, y and z axes
#    gridType (choice: MISFIT PROB_DENSITY) statistical quantity to calculate on grid
#    saveFlag (choice: SAVE NO_SAVE) specifies if the results of the search over this grid should be saved to disk
#
LOCGRID  201 201 106  -100.0 -100.0 -5.0  1.0 1.0 1.0   PROB_DENSITY  SAVE
#
#GridSearch#LOCGRID  51 51 21  -100.0 -100.0 0.0  4.0 4.0 1.0   MISFIT  NO_SAVE
#GridSearch#LOCGRID  51 51 21  -1.0e30 -1.0e30 0.0  0.5 0.5 1.0   MISFIT  NO_SAVE
#GridSearch#LOCGRID  81 81 81  -1.0e30 -1.0e30 0.0  0.25 0.25 0.25  PROB_DENSITY  SAVE

# LOCMETH - Location Method
# required, non-repeatable
# Syntax 1: LOCMETH method maxDistStaGrid minNumberPhases maxNumberPhases minNumberSphases VpVsRatio maxNum3DGridMemory minDistStaGrid iRejectDuplicateArrivals
# Specifies the location method (algorithm) and method parameters.
#
#    method (choice: GAU_ANALYTIC EDT EDT_OT_WT EDT_OT_WT_ML) location method/algorithm ( GAU_ANALYTIC = the inversion approach of Tarantola and Valette (1982) with L2-RMS likelihood function. EDT = Equal Differential Time likelihood function cast into the inversion approach of Tarantola and Valette (1982) EDT_OT_WT = Weights EDT-sum probabilities by the variance of origin-time estimates over all pairs of readings. This reduces the probability (PDF values) at points with inconsistent OT estimates, and leads to more compact location PDF's. EDT_OT_WT_ML = version of EDT_OT_WT with EDT origin-time weighting applied using a grid-search, maximum-likelihood estimate of the origin time. Less efficient than EDT_OT_WT which uses simple statistical estimate of the origin time.)
#    maxDistStaGrid (float) maximum distance in km between a station and the center of the initial search grid; phases from stations beyond this distance will not be used for event location
#    minNumberPhases (integer) minimum number of phases that must be accepted before event will be located
#    maxNumberPhases (integer) maximum number of accepted phases that will be used for event location; only the first maxNumberPhases read from the phase/observations file are used for location
#    minNumberSphases (integer) minimum number of S phases that must be accepted before event will be located
#    VpVsRatio (float) P velocity to S velocity ratio. If VpVsRatio > 0.0 then only P phase travel-times grids are read and VpVsRatio is used to calculate S phase travel-times. If VpVsRatio < 0.0 then S phase travel-times grids are used.
#    maxNum3DGridMemory (integer) maximum number of 3D travel-time grids to attempt to read into memory for Metropolis-Gibbs search. This helps to avoid time-consuming memory swapping that occurs if the total size of grids read exceeds the real memory of the computer. 3D grids not in memory are read directly from disk. If maxNum3DGridMemory < 0 then NLLoc attempts to read all grids into memory.
#    minDistStaGrid (float) minimum distance in km between a station and the center of the initial search grid; phases from stations closer than this distance will not be used for event location
#    iRejectDuplicateArrivals (int) flag indicating if duplicate arrivals used for location (1=reject, 0=use if time diff < sigma / 2); duplicate arrivals have same station label and phase name
#
#LOCMETH GAU_ANALYTIC 9999.0 4 -1 -1 1.68 6
LOCMETH EDT_OT_WT 9999.0 4 -1 -1 1.68 6 -1.0 1

# ========================================================================
# fixed origin time
# (LOCFIXOTIME year month day hour min sec)
#    (int)   year month day hour min
#    (float)   sec
#LOCFIXOTIME 1995 04 21 08 02 57.09

# LOCGAU - Gaussian Model Errors
# required, non-repeatable
# Syntax 1: LOCGAU SigmaTime CorrLen
# Specifies parameters for Gaussian modelisation-error covariances Covariance ij between stations i and j using the relation ( Tarantola and Valette, 1982 ): Covariance ij = SigmaTime 2 exp(-0.5(Dist 2 ij )/ CorrLen 2 ) where Dist is the distance in km between stations i and j .
#
#    SigmaTime (float, min:0.0) typical error in seconds for travel-time to one station due to model errors
#    CorrLen (float, min:0.0) correllaton length that controls covariance between stations ( i.e. may be related to a characteristic scale length of the medium if variations on this scale are not included in the velocity model)
#
LOCGAU 0.2 0.0

# LOCGAU2 - Travel-Time Dependent Model Errors
# optional, non-repeatable
# Syntax 1: LOCGAU2 SigmaTfraction SigmaTmin SigmaTmax
# Specifies parameters for travel-time dependent modelisation-error. Sets the travel-time error in proportion to the travel-time, thus giving effectively a station-distance weighting, which was not included in the standard Tarantola and Valette formulation used by LOCGAU. This is important with velocity model errors, because nearby stations would usually have less absolute error than very far stations, and in general it is probably more correct that travel-time error is a percentage of the travel-time. Preliminary results using LOCGAU2 indicate that this way of setting travel-time errors gives visible improvement in hypocenter clustering. (can currently only be used with the EDT location methods)
#
#    SigmaTfraction (float, min:0.0, max:1.0) fraction of of travel-time to use as error
#    SigmaTmin (float, min:0.0) minimum trave-time error in seconds
#    SigmaTmax (float, min:0.0) maximum trave-time error in seconds
#
LOCGAU2 0.02 0.05 2.0

# LOCPHASEID - Phase Identifier Mapping
# optional, repeatable
# Syntax 1: LOCPHASEID stdPhase phaseCode1 ... ... ... ... ...
# Specifies the mapping of phase codes in the phase/observation file ( i.e. pg or Sn ) to standardized phase codes ( i.e. P or S ).
#
#    stdPhase (string) standardized phase code (used to generate time-grid file names)
#    phaseCode1 ... phaseCodeN (string) one or more phase codes that may be present in a phase/observation file that should be mapped to the stdPhase .
#
LOCPHASEID  P   P p Pn Pg
LOCPHASEID  S   S s Sn Sg
#ToIgnoreS#LOCPHASEID  $   S s Sn Sg

# LOCQUAL2ERR - Quality to Error Mapping
# required, non-repeatable, for phase/observation file formats that do not include time uncertainties ; ignored, non-repeatable, otherwise
# Syntax 1: LOCQUAL2ERR Err0 ... ... ... ...
# Specifies the mapping of phase pick qualities phase/observation file ( i.e. 0,1,2,3 or 4 ) to time uncertainties in seconds ( i.e. 0.01 or 0.5 ).
#
#    Err0 ... ErrN (float, min:0.0) one time uncertainty value for each quality level that may be used in a phase/observation file. The first value Err0 is assigned to picks with quality 0 , the second to picks with quality 1 , etc.
#
# the following quality mapping is default from Hypoellipse documentation
LOCQUAL2ERR 0.1 0.5 1.0 2.0 99999.9

# LOCANGLES - Take-off Angles parameters
# optional, non-repeatable
# Syntax 1: LOCANGLES angleMode qualtiyMin
# Specifies whether to determine take-off angles for the maximum likelihood hypocenter and sets minimum quality cutoff for saving angles and corresponding phases to the HypoInverse Archive file .
#
#    angleMode (choice: ANGLES_YES ANGLES_NO, default:ANGLES_YES) sets if take-off angles are read from angles grid files and output to locations files. ( ANGLES_YES for angles determination or ANGLES_NO for no angles determination)
#    qualtiyMin (integer, default:5) sets the minimum quality (see Take-Off Angles Algorithm ) for writing take-off angles and corresponding phase to the HypoInverse Archive file . ( 0 to 10 ) 
#
LOCANGLES ANGLES_YES 5

# LOCTOPO_SURFACE - Topographic mask for location search region
# optional, non-repeatable
# Syntax 1: LOCTOPO_SURFACE gmtGrdFile flagDumpDecimation
# Uses a topographic surface file in GMT grid2xyz ascii or binary format to mask prior search volume to the half-space below the topography.
#
#    gmtGrdFile (string) path and file name of a GMT grid2xyz ascii (*.asc) or binary (*.bin and *.bin.hdr) file(s) defining the topographic surface in coordinates lat(deg)/long(deg)/elev(m)
#    flagDumpDecimation (integer) if flagDumpDecimation > 0 write surface data to x-y-z-elev file using decimation factor flagDumpDecimation . Output file is in NLL Scatter file format; this format can be plotted in SeismicityViewer.
#
# Note: To convert topo.grd to GMT ascii grid format, use:
#        grdinfo topo.grd > topo.grd.asc
#        grd2xyz topo.grd -Z >> topo.grd.asc
# Note: To convert topo.grd to GMT binary grid format, use:
#        grdinfo topo.grd > topo.grd.bin.hdr
#        grd2xyz topo.grd -ZTLd > topo.grd.bin

# LOCMAG - Magnitude Calculation Method
# optional, non-repeatable
# Syntax 1: LOCMAG ML_HB f n K Ro Mo
# Syntax 2: LOCMAG MD_FMAG c1 c2 c3 c4 c5
# Specifies the magnitude calculation type and parameters. The possible magnitude types are:
# ML_HB (Local (Richter) magnitudeMLfromHutton and Boore (1987)), ML = log(A f) +nlog(r/100) +K(r-100) + 3.0 +S,
# MD_FMAG (Duration magnitudeMLfromLahr, J.C., (1989) HYPOELLIPSE), MD = C1 + C2log(Fc) + C3r + C4z + C5[log(Fc))2,
#
#    f (float, min:0.0) scaling factor to convertAto an equivalent Wood-Anderson amplitude.
#    n (float) n from Hutton and Boore (1987), related to geometrical spreading.
#    K (float) K from Hutton and Boore (1987).
#    Ro (float, default:100) Optional Reference distance (km) from Hutton and Boore (1987).
#    Mo (float, default:3.0) Optional Reference magnitude from Hutton and Boore (1987).
#    c1 c2 c3 c4 c5 (float) c1 c2 c3 c4 c5 from Lahr, J.C., (1989) HYPOELLIPSE
#
#LOCMAG ML_HB 1.0 1.110 0.00189

# LOCCMP - Magnitude Calculation Component
# optional, repeatable
# Syntax 1: LOCCMP label inst comp ampFactor sta_corr_ml_hb sta_corr_fd_fmag
#
#    label (string) station label ( i.e. a station code: ABC )
#    inst (string) instrument identification ( i.e. SP, BRB, VBB ) If inst begins with *, then arrival is taken as having no absolute timing (can currently only be used with the EDT location methods)
#    comp (string) component identification ( i.e. Z, N, E, H )
#    ampFactor (float, min:0.0) amplitude factor, amplitude read from phase file is multiplied by ampFactor to obtain the amplitude used for magnitude calculation.
#    sta_corr_ml_hb (float) ML_HB station correction, from Hutton and Boore (1987)
#    sta_corr_fd_fmag (float) FD_FMAG station correction, from Lahr, J.C., (1989) HYPOELLIPSE
#
# example:
#
#LOCCMP CDR ? ? 1.0 0.0

# LOCSRCE - Source Description
# optional, repeatable (ver 3.0)
# Syntax 1: LOCSRCE ...
# Duplicate of statement GTSRCE - Source Description. Allows specification of a station location when using "DEFAULT" travel-time grids during TRANS GLOBAL mode location. (If for a given station there is no travel-time file containing the station's code in its file name, and there is a LOCSRCE entry for this station code, then NLLoc will look for a travel-time file containing "DEFAULT" as station code in its file name to use for this station. The phase code in the travel-time file names must match that for the station's phase reading.)


# LOCALIAS - Station Code Alias
# optional, repeatable
# Syntax 1: LOCALIAS code alias yearStart monthStart dayStart yearEnd monthEnd dayEnd
# Specifies (1) an alias (mapping) of station codes, and (2) start and end dates of validity of the alias. Allows (1) station codes that vary over time or in different pick files to be homogenized to match codes in time grid files, and (2) allows selection of station data by time.
#
#    code (string) station code (or station name or source label) as read from the phase/observation files, or from the result of another alias evaluation
#    alias (string) new station code which will replace code if the relevant phase pick time falls within the start and end dates of validity of the alias
#    yearStart monthStart dayStart (integer) year (including century), month and day of start date of validity of the alias ( 0 0 0 = no start date)
#    yearEnd monthEnd dayEnd (integer) year (including century), month and day of end date of validity of the alias ( 9999 99 99 = no end date)
#
#   Notes:
#       Alias evaluation is applied recursively, beware of infinite recursion!
#       P and S delays from last alias only are used!
#
# example:
#
#LOCALIAS ART ART_ 1996 05 29 1996 09 18   0.03  0.08

# LOCEXCLUDE - Exclude Observations
# optional, repeatable (ver 2.0)
# Syntax 1: LOCEXCLUDE name phase
#
#    name (string) station label ( i.e. a station code: ABC ) identifier after application of any alias
#    phase (string) phase code beofore mapping by LOCPHASEID ( P , S , PN , etc).
#
#LOCEXCLUDE NEGI S

#LOCELEVCORR - Simple, vertical ray elevation correction
# optional, non-repeatable
# Syntax 1: LOCELEVCORR flag velP velS
# Calculates a simple elevation correction using the travel-time of a vertical ray from elev 0 to the elevation of the station. This control statement is mean to be used in GLOBAL mode with TauP or other time grids which use elevation 0 for the station elevation.
#    flag (integer, min:0, max:1, default:0) flag to set activation of simple elevation correction (0=NO, 1=Yes)
#    velP (float) sets the P velocity to use for calculation of the elevation correction for P type phases (last leg of phase is P or p)
#    velS (float) sets the S velocity to use for calculation of the elevation correction for S type phases (last leg of phase is S or s) 

# LOCSTAWT - Station distribution weighting
# optional, non-repeatable
# Syntax 1: LOCSTAWT flag cutoffDist
# Calculates a weight for each station that is a function of the average distance between all stations used for location. This helps to correct for irregular station distribution, i.e. a high density of stations in regions such as Europe and North America and few or no stations in regions such as oceans. The relative weight for station i is: wieghti = 1.0 / [ SUMj exp(-dist2/cutoffDist2 ] where j is a station used for location and dist is the epicentral/great-circle distance between stations i and j.
#    flag (integer, min:0, max:1, default:0) flag to set activation of station distribution weighting (0=NO, 1=Yes)
#    cutoffDist (float) sets the cutoff distance for weighting calculation. cutoffDist < 0.0 sets automatic cutoff distance: equal to the mean distance between all pairs of stations used for location. 

# LOCPHSTAT - Phase Statistics parameters
# optional, non-repeatable
# Syntax 1: LOCPHSTAT RMS_Max NRdgs_Min Gap_Max P_ResidualMax S_ResidualMax Ell_Len3_Max Hypo_Depth_Min Hypo_Depth_Max Hypo_Dist_Max
# Specifies selection criteria for phase residuals to be included in calculation of average P and S station residuals. The average residuals are saved to a summary, phase statistics file (see Phase Statistics file formats ).
#    RMS_Max (float, default:VERY_LARGE_DOUBLE) the maximum allowed hypocenter RMS in seconds
#    NRdgs_Min (integer, default:-1) the minimum allowed hypocenter number of readings
#    Gap_Max (float, default:VERY_LARGE_DOUBLE) the maximum allowed hypocenter gap in degrees
#    P_ResidualMax S_ResidualMax (float, default:VERY_LARGE_DOUBLE) the maximum allowed residual in seconds for a P or S phase
#    Ell_Len3_Max (float, default:VERY_LARGE_DOUBLE) the maximum allowed ellipsoid major semi-axis length (km)
#    Hypo_Depth_Min Hypo_Depth_Max (float, default:VERY_LARGE_DOUBLE) the minimum and maximum allowed maximum likelihood hypocenter depth (km)
#    Hypo_Dist_Max (float, default:VERY_LARGE_DOUBLE) the maximum allowed maximum likelihood hypocenter distance (km)
#
LOCPHSTAT 9999.0 -1 9999.0 1.0 1.0 9999.9 -9999.9 9999.9

# LOCDELAY - Phase Time Delays
# optional, repeatable
# Syntax 1: LOCDELAY code phase numReadings delay
# Specifies P and S delays (station corrections) to be subtracted from observed P and S times.
#    code (string) station code (after all alias evaluations)
#    phase (string) phase type ( P or S )
#    numReadings (integer) number of residuals used to calculate mean residual/delay (not used by NLLoc, included for compatibility with the format of a summary, phase statistics file)
#    delay (float) delay in seconds, subtracted from observed time
#
# example:
#
#LOCDELAY NEGI P  1  0.04
#
# example, delays read from file:
#INCLUDE obs/vinti.sum.grid0.loc.stat_totcorr

#
#
# =============================================================================
# END of NLLoc control file statements
# =============================================================================
# =============================================================================
